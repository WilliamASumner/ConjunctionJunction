// TrackController #4
// Controls:
// Switch H27
// Switch H32
// Switch H38
// Switch H43


// Switch H27
//setting main
if (H28.occupancy == occupied or H26.occupancy == occupied) then
    H27.switchstate = main;
endif;

// setting fork
if (T76.occupancy == occupied) then 
    H27.switchstate = fork;
endif;

// Error checking for oncoming trains
// yield to main
if (T76.occupancy == occupied and H26.occupancy == occupied) then
    T76.authority = T76;
endif;

//Switch H32
//setting main
if (H34.occupancy == occupied or H31.occupancy == occupied) then
    H32.switchstate = main;
endif;

// setting fork
if (R72.occupancy == occupied) then
    H32.switchstate = fork;
endif;

// Error checking for oncoming trains
if (H34.occupancy == occupied and R72.occupancy == occupied) then
    R72.authority = R72;
    H32.authority = H32;
endif;

//Switch H38
//setting main
if (H37.occupancy == occupied or H39.occupancy == occupied) then
    H38.switchstate = main;
endif;

// setting fork
if (Q71.occupancy == occupied) then
    H38.switchstate = fork;
endif;

// Error checking for oncoming trains
if (H37.occupancy == occupied and Q71.occupancy == occupied) then
    H37.authority = H37;
    Q71.authority = Q71;
endif;

//Switch H43
//setting main
if (H42.occupancy == occupied or H44.occupancy == occupied) then
    H43.switchstate = main;
endif;

// setting fork
if (O67.occupancy == occupied) then
    H43.switchstate = fork;
endif;

// Error checking for oncoming trains
if (H42.occupancy == occupied and O67.occupancy == occupied) then
    H42.authority = H42;
    O67.authority = O67;
endif;

